{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple population management API built with Node js, Express Js and Postgres.",
    "version": "1.0.0",
    "title": "Population management API",
    "contact": {
      "email": "desshub95@gmail.com"
    }
  },
  "host": "population-manager-app.herokuapp.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/locations": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "create a new location",
        "description": "",
        "operationId": "createlocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "creates a new location",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "retrieves all locations in the database",
        "description": "get all the locations in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "/definitions/Location"
              }
            }
          }
        }
      }
    },
    "/api/locations/{locationName}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Find Location by name",
        "description": "Returns a single location",
        "operationId": "getLocationByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "description": "Name of location to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "404": {
            "description": "Location not found"
          },
          "422": {
            "description": "Invalid Name supplied"
          }
        }
      },
      "delete": {
        "tags": [
          "locations"
        ],
        "summary": "delete location",
        "description": "delete a location with given name",
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "ID of location to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "location not found"
          },
          "422": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/api/locations/:id": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Update location",
        "description": "ID to update",
        "operationId": "updateLoation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Updating location",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
}
